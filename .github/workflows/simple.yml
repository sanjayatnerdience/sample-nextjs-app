name: simple pipeline

on:
  push:
    branches: [main]

jobs:
  lintTest:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          echo "Running and Installing Dependencies ..."
          npm install

      - name: Run Linting
        run: |
          echo "Running Linting tests .."
          npm run lint
        env:
          CI: true

  securityCheck:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checks the Security
        run: |
          echo "Running Security Checks .."
          sleep 5s
          echo "Running Security Checks .."
          sleep 5s
          echo "Running Security Checks .."
          sleep 5s
        env:
          CI: true

  dockerize:
    name: Dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            sanjayatnerdience/nextjs-app:latest
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa


      - name: Deploy using Docker
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            docker pull sanjayatnerdience/nextjs-app:latest

            # Stop and remove any existing container
            docker stop nextjs-app || true
            docker rm nextjs-app || true

            # Run the new container
            docker run -d \
              --name nextjs-app \
              -p 80:3000 \
              sanjayatnerdience/nextjs-app:latest
          EOF
